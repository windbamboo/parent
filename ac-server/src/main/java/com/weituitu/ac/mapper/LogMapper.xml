<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weituitu.ac.mapper.LogMapper" >
  <resultMap id="BaseResultMap" type="com.weituitu.ac.po.Log" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="VARCHAR" />
    <result column="action_type" property="actionType" jdbcType="TINYINT" />
    <result column="action_time" property="actionTime" jdbcType="TIMESTAMP" />
    <result column="action_detail" property="actionDetail" jdbcType="VARCHAR" />
    <result column="user_ip" property="userIp" jdbcType="CHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    log_id, user_id, module_id, action_type, action_time, action_detail, user_ip, gmt_create, 
    gmt_modify
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.weituitu.ac.po.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ac_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ac_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ac_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.weituitu.ac.po.LogExample" >
    delete from ac_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.weituitu.ac.po.Log" >
    insert into ac_log (log_id, user_id, module_id, 
      action_type, action_time, action_detail, 
      user_ip, gmt_create, gmt_modify
      )
    values (#{logId,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{moduleId,jdbcType=VARCHAR}, 
      #{actionType,jdbcType=TINYINT}, #{actionTime,jdbcType=TIMESTAMP}, #{actionDetail,jdbcType=VARCHAR}, 
      #{userIp,jdbcType=CHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.weituitu.ac.po.Log" >
    insert into ac_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="actionType != null" >
        action_type,
      </if>
      <if test="actionTime != null" >
        action_time,
      </if>
      <if test="actionDetail != null" >
        action_detail,
      </if>
      <if test="userIp != null" >
        user_ip,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="actionType != null" >
        #{actionType,jdbcType=TINYINT},
      </if>
      <if test="actionTime != null" >
        #{actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionDetail != null" >
        #{actionDetail,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        #{userIp,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.weituitu.ac.po.LogExample" resultType="java.lang.Integer" >
    select count(*) from ac_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ac_log
    <set >
      <if test="record.logId != null" >
        log_id = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.actionType != null" >
        action_type = #{record.actionType,jdbcType=TINYINT},
      </if>
      <if test="record.actionTime != null" >
        action_time = #{record.actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actionDetail != null" >
        action_detail = #{record.actionDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.userIp != null" >
        user_ip = #{record.userIp,jdbcType=CHAR},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ac_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      module_id = #{record.moduleId,jdbcType=VARCHAR},
      action_type = #{record.actionType,jdbcType=TINYINT},
      action_time = #{record.actionTime,jdbcType=TIMESTAMP},
      action_detail = #{record.actionDetail,jdbcType=VARCHAR},
      user_ip = #{record.userIp,jdbcType=CHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.weituitu.ac.po.Log" >
    update ac_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="actionType != null" >
        action_type = #{actionType,jdbcType=TINYINT},
      </if>
      <if test="actionTime != null" >
        action_time = #{actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionDetail != null" >
        action_detail = #{actionDetail,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        user_ip = #{userIp,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weituitu.ac.po.Log" >
    update ac_log
    set user_id = #{userId,jdbcType=INTEGER},
      module_id = #{moduleId,jdbcType=VARCHAR},
      action_type = #{actionType,jdbcType=TINYINT},
      action_time = #{actionTime,jdbcType=TIMESTAMP},
      action_detail = #{actionDetail,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=CHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>